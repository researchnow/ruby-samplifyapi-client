=begin
#Samplify API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for SamplifyAPIClient::ProjectSurveyEndLinksData
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProjectSurveyEndLinksData' do
  before do
    # run before each test
    @instance = SamplifyAPIClient::ProjectSurveyEndLinksData.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectSurveyEndLinksData' do
    it 'should create an instance of ProjectSurveyEndLinksData' do
      expect(@instance).to be_instance_of(SamplifyAPIClient::ProjectSurveyEndLinksData)
    end
  end
  describe 'test attribute "end_links"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "entry_link"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "security_key1"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "security_key2"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "security_level"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["NONE", "BASIC", "MEDIUM", "HIGH"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.security_level = value }.not_to raise_error
      # end
    end
  end

end
