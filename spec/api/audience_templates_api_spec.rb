=begin
#Samplify API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for SamplifyAPIClient::AudienceTemplatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AudienceTemplatesApi' do
  before do
    # run before each test
    @instance = SamplifyAPIClient::AudienceTemplatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AudienceTemplatesApi' do
    it 'should create an instance of AudienceTemplatesApi' do
      expect(@instance).to be_instance_of(SamplifyAPIClient::AudienceTemplatesApi)
    end
  end

  # unit tests for audience_templates_create
  # create audienceTemplates
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @return [Template]
  describe 'audience_templates_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for audience_templates_delete
  # delete audienceTemplates
  # @param template_id 
  # @param [Hash] opts the optional parameters
  # @return [AppError]
  describe 'audience_templates_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for audience_templates_list
  # list audienceTemplates
  # @param country_iso_code 
  # @param language_iso_code 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :created_at return templates with createdAt date range
  # @option opts [BOOLEAN] :editable return templates with the given value for editable flag
  # @option opts [String] :id Only return template with the given id
  # @option opts [Integer] :limit Maximum number of templates to return
  # @option opts [String] :name Only return templates matching the given name
  # @option opts [Integer] :offset The first zero-based offset template to return
  # @option opts [Array<String>] :sort Sort the templates by the given key(s)
  # @option opts [String] :state Only return templates with the given state
  # @option opts [String] :tags return templates with the given tags
  # @option opts [String] :updated_at return templates with updatedAt date range
  # @return [Templates]
  describe 'audience_templates_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for audience_templates_update
  # update audienceTemplates
  # @param template_id 
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @return [Template]
  describe 'audience_templates_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
