=begin
#Samplify API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for SamplifyAPIClient::AttributesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AttributesApi' do
  before do
    # run before each test
    @instance = SamplifyAPIClient::AttributesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AttributesApi' do
    it 'should create an instance of AttributesApi' do
      expect(@instance).to be_instance_of(SamplifyAPIClient::AttributesApi)
    end
  end

  # unit tests for attributes_list
  # list attributes
  # @param country_iso_code Country ISO code
  # @param language_iso_code Language ISO code
  # @param [Hash] opts the optional parameters
  # @option opts [String] :category Only return attributes with the given category
  # @option opts [String] :id Only return attributes with the given id
  # @option opts [Integer] :limit Maximum number of attributes to return
  # @option opts [String] :name Only return attributes with the given name
  # @option opts [Integer] :offset The first zero-based offset attribute to return
  # @option opts [Array<String>] :sort Sort the attributes by the given key(s)
  # @option opts [String] :state Only return attributes with the given state
  # @option opts [String] :subcategory Only return attributes with the given subcategory
  # @option opts [String] :text Only return attributes with the given text
  # @option opts [String] :tier Only return attributes with the given tier
  # @option opts [String] :type Only return attributes with the given type
  # @return [Attributes]
  describe 'attributes_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
