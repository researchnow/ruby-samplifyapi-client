=begin
#Samplify API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for SamplifyAPIClient::EventsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @instance = SamplifyAPIClient::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@instance).to be_instance_of(SamplifyAPIClient::EventsApi)
    end
  end

  # unit tests for events_accept
  # accept events
  # Accept event
  # @param event_id Event ID
  # @param [Hash] opts the optional parameters
  # @return [Event]
  describe 'events_accept test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for events_createproject
  # createproject events
  # createproject event.
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @return [CreateProject]
  describe 'events_createproject test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for events_get
  # get events
  # Get event
  # @param event_id Event ID
  # @param [Hash] opts the optional parameters
  # @return [Event]
  describe 'events_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for events_list
  # list events
  # List events.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :event_type Only return events with the given eventType
  # @option opts [String] :ext_line_item_id Only return events with the given external line item id
  # @option opts [String] :ext_project_id Only return events with the given external project id
  # @option opts [Integer] :limit Maximum number of events to return
  # @option opts [Integer] :offset The first zero-based offset event to return
  # @option opts [Array<String>] :sort Sort the events by the given key(s)
  # @return [Events]
  describe 'events_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for events_reject
  # reject events
  # Reject event
  # @param event_id Event ID
  # @param [Hash] opts the optional parameters
  # @return [Event]
  describe 'events_reject test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for events_reprice
  # reprice events
  # Line item repricing event.
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @return [Reprice]
  describe 'events_reprice test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for events_state_change
  # stateChange events
  # Line item state change event.
  # @param payload 
  # @param [Hash] opts the optional parameters
  # @return [StateChange]
  describe 'events_state_change test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
